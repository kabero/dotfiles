# 
# Keybindings
#-------------------------------------

# change the prefix key
unbind-key C-b
set -g prefix C-q
bind C-q send-prefix

# movement between panes with vim keybindings
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize pane
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

# open a new pane with the current path name
bind '"' split-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}' -a
bind C new-window -c '~' -a

# copy-mode with vim keybindings
setw -g mode-keys vi
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# reload tmux.conf
bind r source-file ~/.tmux.conf \; display-message "tmux.conf has been reloaded."

# restore default behavior for next-window
bind n next-window

# split -v S
unbind S
bind S split-window \; select-layout even-vertical

# split vertically evenaly
unbind |
bind | split-window -h \; select-layout even-horizontal

# stay in copy mode after mouse selection
# TOOD: not working

# toggle tmux popup window with o
# bind o run-shell "~/.local/bin/tmuxpopup note"
bind m run-shell "~/.local/bin/tmuxpopup terminal"
bind e run-shell "~/.local/bin/tmuxedit"

#
# Custom Commands
#-------------------------------------
set -g command-alias[0] vs='split-window -h -c "#{pane_current_path}"; select-layout even-horizontal'
set -g command-alias[1] sp='split-window -v -c "#{pane_current_path}"; select-layout even-vertical'

#
# options
#-------------------------------------

set-option -g mouse on
set -g base-index 0
setw -g pane-base-index 0
set-option -g default-terminal "screen-256color"
# set -ga terminal-overrides ',*256color*:RGB'
# set -ga terminal-overrides ',alacritty*:RGB'
set-option -g renumber-windows on
set -g history-limit 50000
setw -g aggressive-resize off

# syncronize between tmux and vim
set -g focus-events on
set -s escape-time 0
set-option -g set-clipboard on

# default shell
set-option -g default-shell "/bin/zsh"
set-option -g default-command "exec /bin/zsh --login"

set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off

#
# View
#-------------------------------------

# background
# keybinding to toggle transparency for the background
set -g @window-style-bg "colour233"
set -g @window-active-style-bg "colour232"
set -g window-style "default,bg=#{@window-style-bg}"
set -g window-active-style "default,bg=#{@window-active-style-bg}"
bind 0 run-shell 'if [ "$(tmux show -v -g @window-style-bg)" = "default" ]; then tmux set -g @window-style-bg "colour235"; tmux set -g @window-active-style-bg "colour234"; else tmux set -g @window-style-bg "default"; tmux set -g @window-active-style-bg "default"; fi' \; set -g window-style "default,bg=#{@window-style-bg}"

# Status bar
set -g status-interval 0
set-option -g status-left  "#[fg=colour075]#{?client_prefix,#[reverse],} [#S] #[default]"
set -g status-left-length 50
set-option -g status-right '#[fg=colour250]%Y-%m-%d(%a) %H:%M  '
set -g status-position bottom
set -g status-justify centre
set -g status-bg colour233
setw -g window-status-current-format ' #[fg=colour009]#I#[fg=colour238]:#[fg=colour251]#W#F (#(basename #{pane_current_path}))'
setw -g window-status-format ' #[fg=colour238]#I#[fg=colour238]:#[fg=colour238]#W#F (#(basename #{pane_current_path}))'

# Border of panes
set -g pane-border-style fg=colour232,bg=colour233
set -g pane-active-border-style fg=colour232,bg=colour232
set -g pane-border-indicators off
set -g pane-border-lines heavy

# Others
set-option -g message-style fg=white,bg=black,bright
set-window-option -g clock-mode-colour blue
set-window-option -g window-status-bell-style fg=black,bg=red

#
# Display the colors that tmux uses.
#
# for i in {0..255}; do
#     printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n"
# done
