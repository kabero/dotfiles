eval "$(starship init zsh)"

# starship
PYENV_VIRTUALENV_DISABLE_PROMPT=1


# general
export EDITOR=nvim
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export HISTFILE="$HOME/.zsh_history"
autoload -Uz colors
colors
bindkey -e

# direnv
eval "$(direnv hook zsh)"

# asdf
{{ if eq .chezmoi.os "darwin" }}
. /opt/homebrew/opt/asdf/libexec/asdf.sh
# fpath=(${ASDF_DIR}/completions $fpath)
# autoload -Uz compinit && compinit
source "${XDG_CONFIG_HOME:-$HOME/.config}/asdf-direnv/zshrc"
{{ end }}
{{ if eq .chezmoi.os "linux" }}
. "$HOME/.asdf/asdf.sh"
{{ end }}

# Java
{{ if eq .chezmoi.os "darwin" }}
export PATH="/opt/homebrew/opt/openjdk@11/bin:$PATH"
export CPPFLAGS="-I/opt/homebrew/opt/openjdk@11/include"
{{ end }}

# PHP
{{ if eq .chezmoi.os "darwin" }}
export PATH="/opt/homebrew/opt/php@8.0/bin:$PATH"
export PATH="/opt/homebrew/opt/php@8.0/sbin:$PATH"
{{ end }}

# Go
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

# nvm
{{ if eq .chezmoi.os "darwin" }}
export NVM_DIR="$HOME/.nvm"
  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
{{ end }}

# options
setopt print_eight_bit
setopt no_beep
setopt nolistbeep

# history
setopt auto_pushd
setopt share_history
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt pushd_ignore_dups
setopt hist_ignore_all_dups
HISTSIZE=100000
SAVEHIST=100000

# aliases
alias vi="nvim -u ~/.vimrc"
alias vim="nvim"
alias view="nvim -R"
alias tl='tldr'
{{ if eq .chezmoi.os "darwin" }}
alias ls="exa --sort=ext" 
alias tree="exa -T"
alias df="duf"
alias lg='lazygit'
{{ end }}

# fish-like behavior
{{ if eq .chezmoi.os "darwin"  }}
{{ end }}
source `brew --prefix`/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
if type brew &>/dev/null; then
    FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
    FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
    autoload -Uz compinit
    compinit
fi

# zoxide
eval "$(zoxide init zsh)"

# zsh-autosuggestions
{{ if eq .chezmoi.os "darwin" }}
source `brew --prefix`/share/zsh-autosuggestions/zsh-autosuggestions.zsh
{{ end }}
{{ if eq .chezmoi.os "linux" }}
. "$HOME/.asdf/asdf.sh"
fpath=(${ASDF_DIR}/completions $fpath)
autoload -Uz compinit && compinit
{{ end }}

# configs of fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!**/.git/*"'
export FZF_DEFAULT_OPTS="
    --height 40% --reverse --border=sharp --margin=0,1
    --prompt='> ' --color=dark
"

# for finding files in current directories
export FZF_CTRL_T_COMMAND='rg --files --hidden --follow --glob "!**/.git/*"'
export FZF_CTRL_T_OPTS="
    --preview 'bat  --color=always --style=header,grid {}'
    --preview-window=right:60%
"

# ghq + fzf
function _ghq_fzf() {
  local src=$(ghq list | fzf --preview "ls -laTp $(ghq root)/{} | tail -n+4 | awk '{print \$9\"/\"\$6\"/\"\$7 \" \" \$10}'")
  if [ -n "$src" ]; then
    BUFFER="cd $(ghq root)/$src"
    zle accept-line
  fi
  zle -R -c
}
zle -N _ghq_fzf
bindkey '^g' _ghq_fzf


# jupyter
function jupyter-local() {
    jupyter notebook --notebook-dir=. --ip='*' --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
}

# the fuck
eval $(thefuck --alias)

# cd today's sandbox
today() {
    local date="$(date -u +%m%d)"
    local dirpath="$HOME/dev/sandbox/daily/$date"
    if [ ! -e $dirpath ]; then
        mkdir -p $dirpath
    fi
    cd $dirpath
}
